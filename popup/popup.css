/* VibeReader Popup - Enhanced with Tailwind CSS */
/* Import our main Tailwind CSS system */
@import '../styles/generated.css';

/* Popup-specific styles that aren't in our component system */
body {
  width: 350px;
  min-height: 500px;
  @apply bg-bg-primary text-text-primary font-mono;
  background: radial-gradient(circle at center, rgb(var(--bg-primary)), rgb(var(--bg-secondary))) !important;
  overflow-x: hidden;
  position: relative;
}

/* Background matrix effect */
body::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(rgba(255, 20, 147, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 255, 0.03) 1px, transparent 1px);
  background-size: 20px 20px;
  pointer-events: none;
  z-index: 1;
}

.vibe-popup {
  position: relative;
  z-index: 10;
  @apply p-5 min-h-[500px];
}

/* Header with clip-path effect */
.popup-header {
  @apply text-center mb-5 p-4 rounded-lg relative overflow-hidden;
  @apply bg-gradient-to-br from-primary-500/10 to-secondary-500/5;
  @apply border-2 border-primary-500 clip-corner;
  transition: all 0.3s ease;
}

.popup-header:hover {
  @apply clip-corner-xl;
}

.popup-title {
  @apply text-2xl font-bold text-primary-400 mb-2;
  text-shadow: 0 0 10px rgb(var(--primary-500));
}

.version-info {
  @apply text-xs text-secondary-400 opacity-80;
}

/* Status section */
.status-section {
  @apply mb-6;
}

.status-indicator {
  @apply flex items-center justify-center gap-3 p-4 rounded-lg;
  @apply bg-gradient-to-r from-bg-secondary to-bg-surface;
  @apply border border-border-default;
}

.status-icon {
  @apply text-2xl;
}

.status-text {
  @apply text-lg font-bold text-secondary-400;
}

/* Actions section */
.actions-section {
  @apply mb-6 space-y-4;
}

.quick-actions {
  @apply flex gap-2;
}

/* Settings panel */
.settings-panel {
  @apply space-y-4 p-4 rounded-lg border border-border-accent;
  @apply bg-gradient-to-br from-bg-surface/20 to-bg-secondary/10;
  @apply opacity-0 max-h-0 overflow-hidden;
  transition: all 0.3s ease;
}

.settings-panel.active {
  @apply opacity-100 max-h-[500px];
}

.settings-header h3 {
  @apply text-lg font-bold text-center text-accent-400 mb-4;
}

.setting-group {
  @apply mb-4;
}

.setting-label {
  @apply flex items-center justify-between;
}

.label-text {
  @apply text-sm font-medium text-text-secondary;
}

.setting-select {
  @apply bg-bg-surface border border-border-default rounded px-3 py-2;
  @apply text-text-primary text-sm min-w-[120px];
  @apply focus:border-primary-500 focus:ring-1 focus:ring-primary-500;
}

/* Info section */
.info-section {
  @apply mt-6 pt-4 border-t border-border-default;
}

.shortcut-info {
  @apply flex items-center justify-between mb-4;
}

.shortcut-label {
  @apply text-sm text-text-muted;
}

.shortcut-code {
  @apply bg-bg-surface px-2 py-1 rounded text-xs text-accent-400;
  @apply border border-border-default font-mono;
}

.footer-links {
  @apply flex justify-center gap-4;
}

.footer-link {
  @apply text-xs text-text-muted hover:text-primary-400;
  @apply transition-colors duration-200;
  text-decoration: none;
}

/* Glitch effect for title */
.glitch {
  position: relative;
  color: rgb(var(--primary-400));
}

.glitch.glitching::before {
  content: attr(data-text);
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  color: rgb(var(--secondary-500));
  overflow: hidden;
  top: 0;
  animation: glitch-1 0.3s linear;
  clip: rect(0, 90px, 0, 0);
}

.glitch.glitching::after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  color: rgb(var(--accent-500));
  overflow: hidden;
  top: 0;
  animation: glitch-2 0.3s linear;
  clip: rect(0, 90px, 0, 0);
}

@keyframes glitch-1 {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

@keyframes glitch-2 {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(2px, -2px); }
  40% { transform: translate(2px, 2px); }
  60% { transform: translate(-2px, -2px); }
  80% { transform: translate(-2px, 2px); }
}